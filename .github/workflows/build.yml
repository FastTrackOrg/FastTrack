name: Continous Builds

on:
  push:
    branches: [master]

jobs:
  job_1:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install opencv
        run: |
            sudo apt-get update
            sudo apt-get dist-upgrade
            sudo apt-get install mesa-common-dev libgl1-mesa-dev libssl-dev
            sudo apt-get install libxcb-*
            sudo apt-get install libxkb-*
            sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libnss3
            sudo apt-get install libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev
            sudo apt-get install libopencv-dev
      - name: install qt6
        run: |
          pip install aqtinstall
          python3 -m aqt install-qt -O ${{ github.workspace }}/Qt/ linux desktop 6.2.1
          echo ${{ github.workspace }}/Qt/6.2.1/gcc_64/bin/ >> $GITHUB_PATH
      - name: build
        run: |
          ./run.sh ci
          make clean
      - name: appimage
        run: |
          wget -O deploy.AppImage https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x deploy.AppImage
          cp sh.fasttrack.fasttrack.desktop build/
          cp src/assets/fasttrack.png build/
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/Qt/6.2.1/gcc_64/lib/
          ./deploy.AppImage build/fasttrack -appimage -no-translations -bundle-non-qt-libs -unsupported-allow-new-glibc -qmake=${{ github.workspace }}/Qt/6.2.1/gcc_64/bin/qmake6 -extra-plugins=platforms/,sqldrivers/ -exclude-libs=libgmodule-2.0.so
          mv FastTrack*.AppImage FastTrack-x86_64.AppImage
      - name: Linux artefact
        uses: actions/upload-artifact@v1
        with:
          name: FastTrackLinux
          path: ./FastTrack-x86_64.AppImage
  job_2:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install qt6
        run: |
          pip install aqtinstall
          python3 -m aqt install-qt -m qtwebengine qtwebchannel qtpositioning -O ${{ github.workspace }}/Qt/ windows desktop 6.2.1 win64_msvc2019_64
          echo "${{ github.workspace }}/Qt/6.2.1/msvc2019_64/bin/" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: install opencv
        shell: cmd
        run: |
          bitsadmin.exe /transfer debjob /download /priority normal https://downloads.sourceforge.net/project/opencvlibrary/4.5.5/opencv-4.5.5-vc14_vc15.exe C:\opencv-4.5.5-vc14_vc15.exe
          C:\opencv-4.5.5-vc14_vc15.exe -o"C:\" -y
      - name: build
        shell: cmd
        run: |
          cd src/
          qmake FastTrack.pro -spec win32-msvc CONFIG+=release
          nmake release
          nmake clean
          cd release
          windeployqt FastTrack.exe --release --compiler-runtime
          copy ..\assets\icon.ico .
          copy C:\Windows\System32\concrt140.dll . 
          copy C:\Windows\System32\msvcp140.dll .
          copy C:\Windows\System32\msvcp140_1.dll .
          copy C:\Windows\System32\msvcp140_2.dll .
          copy C:\Windows\System32\msvcp160.dll .
          copy C:\opencv\build\x64\vc15\bin\opencv_videoio_ffmpeg455_64.dll .
          copy C:\opencv\build\x64\vc15\bin\opencv_world455.dll .
          copy C:\Windows\System32\vcruntime140.dll .
          copy C:\Windows\System32\vcruntime140_1.dll .  
          copy C:\Windows\System32\vccorlib140.dll .
          copy C:\Windows\System32\libcrypto-1_1-x64.dll .
          copy C:\Windows\System32\libssl-1_1-x64.dll .
          7z a FastTrack.zip *
      - name: Windows artefact
        uses: actions/upload-artifact@v1
        with:
          name: FastTrackWindows
          path: src/release/FastTrack.zip
  job_3:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install qt6
        run: |
          pip install aqtinstall
          python3 -m aqt install-qt -m qtwebengine qtwebchannel qtpositioning -O ${{ github.workspace }}/Qt/ mac desktop 6.2.1
          echo ${{ github.workspace }}/Qt/6.2.1/macos/bin/ >> $GITHUB_PATH
      - name: install opencv
        run: |
          rm -rf /usr/local/bin/2to3
          brew update
          brew upgrade
          brew install pkg-config
          brew install opencv
          brew install openssl
          brew unlink unixodbc
          brew install libiodbc
          export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
      - name: build
        run: |
          qmake src/FastTrack.pro CONFIG+=release
          make
          cd build/
          macdeployqt FastTrack.app -always-overwrite
          wget https://raw.githubusercontent.com/arl/macdeployqtfix/master/macdeployqtfix.py
          python2.7 macdeployqtfix.py FastTrack.app/Contents/MacOS/FastTrack ../../Qt/6.2.1/
          hdiutil create -volname FastTrack -srcfolder FastTrack.app -ov -format UDZO FastTrack.dmg

      - name: Mac artefact
        uses: actions/upload-artifact@v1
        with:
          name: FastTrackMac
          path: ./build/FastTrack.dmg
