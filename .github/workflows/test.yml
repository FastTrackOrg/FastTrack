name: FastTrack_testing

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
env:
  QT_VERSION: 6.4.2
  OPENCV_VERSION: 4.7.0

jobs:
  test_linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: install_qt6
      run: |
        sudo apt-get update
        sudo apt-get install build-essential cmake libgl1-mesa-dev
        sudo apt-get install libgtest-dev
        pip install aqtinstall
        python3 -m aqt install-qt -m qtcharts -O ${{ github.workspace }}/Qt/ linux desktop ${{ env.QT_VERSION }}
        echo ${{ github.workspace }}/Qt/${{ env.QT_VERSION }}/gcc_64/bin/ >> $GITHUB_PATH
    - name: install_opencv
      run: sudo apt-get install libopencv-dev
    - name: install_deps
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install numpy pandas pytest
    - name: test_ft
      run: |
        ./test.sh unix

  test_win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install_qt6
        run: |
          choco uninstall mingw
          pip install aqtinstall
          python3 -m aqt install-qt -m qtcharts -O ${{ github.workspace }}/Qt/ windows desktop ${{ env.QT_VERSION }} win64_mingw
          python3 -m aqt install-tool -O ${{ github.workspace }}/Qt/ windows desktop tools_mingw90
          echo "${{ github.workspace }}/Qt/${{ env.QT_VERSION }}/mingw_64/bin/" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "${{ github.workspace }}/Qt/Tools/mingw1120_64/bin/" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: install_opencv
        run: |
          choco install wget unzip cmake git
          wget https://github.com/FastTrackOrg/Windows_MinGW_64_OpenCV/releases/download/${{ env.OPENCV_VERSION }}/OpenCV_MinGW_64.zip
          unzip OpenCV_MinGW_64.zip -d ${{ github.workspace }}
          echo "${{ github.workspace }}/OpenCV_MinGW_64/bin/" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: install_gtest
        run: |
          git clone https://github.com/google/googletest
          cd googletest
          git checkout release-1.11.0
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" -DCMAKE_CXX_COMPILER=g++ -DCMAKE_INSTALL_PREFIX:PATH=./install/ ../
          cmake --build . --config Release
          cmake --install .
      - name: install_deps
        shell: cmd
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install numpy pandas pytest
      - name: test_ft
        shell: bash
        run: |
          ./test.sh win

  test_mac:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: install_qt6
        run: |
          pip install aqtinstall
          python3 -m aqt install-qt -m qtcharts -O ${{ github.workspace }}/Qt/ mac desktop ${{ env.QT_VERSION }}
          echo ${{ github.workspace }}/Qt/${{ env.QT_VERSION }}/macos/bin/ >> $GITHUB_PATH
      - name: install_deps
        run: |
          rm -rf /usr/local/bin/2to3
          brew update
          brew upgrade
          brew install pkg-config
          brew install libomp
          brew install opencv
          brew install googletest
          export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install numpy pandas pytest
      - name: test_ft
        run: |
          ./test.sh unix
