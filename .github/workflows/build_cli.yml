name: Continous Builds Cli

on:
  push:
    branches: [ master ]

jobs:

  job_1:
      runs-on: ubuntu-18.04
      steps:
        - uses: actions/checkout@v2
        - name: install qt5
          run: |
             sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-bionic
             sudo apt-get update
             sudo apt-get install libgl1-mesa-dev qt515base qt515webengine ffmpeg
             sudo add-apt-repository ppa:ubuntu-toolchain-r/test
             sudo apt-get update
             sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev
             sudo apt-get install libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev
             sudo apt-get install gcc-9 g++-9
             sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
        - name: install opencv
          run: sudo ./dependencies.sh opencv
        - name: build
          run: |
              export QTDIR=/opt/qt515
              export PATH=/opt/qt515/bin:$PATH
              export LD_LIBRARY_PATH=$QT_DIR/lib/x86_64-linux-gnu:$QT_DIR/lib:$LD_LIBRARY_PATH
              ./run.sh cli
              make clean
        - name: appimage
          run: |
              cd build_cli
              export QTDIR=/opt/qt515
              export PATH=/opt/qt515/bin:$PATH
              export LD_LIBRARY_PATH=$QT_DIR/lib/x86_64-linux-gnu:$QT_DIR/lib:$LD_LIBRARY_PATH
              wget -O deploy.AppImage https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
              chmod +x deploy.AppImage
              cp ../sh.fasttrack.fasttrackcli.desktop .
              cp ../src/assets/fasttrack.png .
              ./deploy.AppImage sh.fasttrack.fasttrackcli.desktop -appimage -no-translations -bundle-non-qt-libs
              mv FastTrack*.AppImage FastTrack-cli-x86_64.AppImage
        - name: Linux artefact
          uses: actions/upload-artifact@v1
          with:
            name: FastTrackLinux
            path: ./build_cli/FastTrack-cli-x86_64.AppImage
  job_2:
      runs-on: macos-latest
      steps:
        - uses: actions/checkout@v2
        - uses: jurplel/install-qt-action@v2
          with:
            host: 'mac'
            target: 'desktop'
            dir: '${{ github.workspace }}/Qt/'
            install-deps: 'true'
            modules: 'qtwebengine'
            cached: 'false'
            extra: '--external 7z'
        - name: install opencv
          run: |
              rm -rf /usr/local/bin/2to3
              brew update
              brew upgrade
              brew install pkg-config
              brew install opencv
              export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/
        - name: build
          run: |
              qmake src/FastTrack-Cli.pro
              make
              cd build_cli/
              macdeployqt fasttrack-cli.app -always-overwrite
              wget https://raw.githubusercontent.com/arl/macdeployqtfix/master/macdeployqtfix.py
              python2.7 macdeployqtfix.py fasttrack_cli.app/Contents/MacOS/fasttrack-cli ../../Qt/5.15.0/
              hdiutil create -volname fasttrack-cli -srcfolder fasttrack-cli.app -ov -format UDZO fasttrack-cli.dmg


        - name: Mac artefact
          uses: actions/upload-artifact@v1
          with:
            name: FastTrackMac
            path: ./build_cli/fasttrack-cli.dmg

  job_4:
      needs: [job_1, job_2]
      runs-on: ubuntu-latest
      steps:
        - name: Delete old assets
          uses: mknejp/delete-release-assets@v1
          with:
            token: ${{ github.token }}
            tag: continuous_cli 
            fail-if-no-assets: false
            assets: '*'
        - name: Get Release
          id: get_release
          uses: cardinalby/git-get-release-action@v1.1
          env:
            GITHUB_TOKEN: ${{ github.token }}
          with:
            tag: continuous_cli
        - name: Download linux
          uses: actions/download-artifact@v1
          with:
            name: FastTrackLinux
        - name: upload release asset
          id: upload-release-asset-Linux
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.get_release.outputs.upload_url }}
            asset_path: FastTrackLinux/FastTrack-cli-x86_64.AppImage
            asset_name: FastTrack-cli-x86_64.AppImage
            asset_content_type: application/zip
        - name: Download Mac
          uses: actions/download-artifact@v1
          with:
            name: FastTrackMac
        - name: upload release asset_mac
          id: upload-release-asset_mac
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.get_release.outputs.upload_url }}
            asset_path: FastTrackMac/fasttrack-cli.dmg
            asset_name: FastTrackCli.dmg
            asset_content_type: application/zip
